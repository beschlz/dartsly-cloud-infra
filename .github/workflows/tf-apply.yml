name: 'Deploy Environment in AWS'

on:
    push:
        branches:
        - main
    pull_request:
        branches:
        - main

jobs:            
    packer_build:
        runs-on: ubuntu-latest
        name: Build EC2 Image
        environment: production
        defaults:
          run:
            working-directory: ./packer
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        outputs:
          packer_has_changed: ${{ steps.filter.outputs.packer }}
        steps:
        - name: Checkout Project
          uses: actions/checkout@v3
          with:
            ref: ${{ github.ref }}
        - name: Setup Filter so that this jobs only runs, when ./packer was updated
          uses: dorny/paths-filter@v2
          id: filter
          with:
            filters: |
                workflows:
                  - 'packer/**'
        - name: Setup Packer
          if: steps.filter.outputs.packer == 'true'
          uses: hashicorp/setup-packer@main
          id: setup
          with:
            version: "latest"
        - name: Run `packer init`
          if: steps.filter.outputs.packer == 'true'
          id: init
          run: "packer init ./k3s-master.pkr.hcl"
        - name: Run `packer validate`
          if: steps.filter.outputs.packer == 'true'
          id: validate
          run: "packer validate ./k3s-master.pkr.hcl"
        - name: Build EC2 Image
          if: steps.filter.outputs.packer == 'true'
          run: "packer build ./k3s-master.pkr.hcl"
    terraform_deploy:
        runs-on: ubuntu-latest
        name: Deploy
        needs: packer_build
        environment: production
        defaults:
          run:
            working-directory: ./terraform
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        steps:
        - name: Checkout Project
          uses: actions/checkout@v3
          with:
            ref: ${{ github.ref }}
        - name: Setup Terraform
          uses:  hashicorp/setup-terraform@v2
          with:
                terraform_version: 1.4.4
                terraform_wrapper: false
        - name: Terraform Init
          id : init
          run: terraform init
        - name: Terraform Apply
          if: github.ref == 'refs/heads/main' && github.event_name == 'push'
          id: apply
          run: terraform apply -auto-approve